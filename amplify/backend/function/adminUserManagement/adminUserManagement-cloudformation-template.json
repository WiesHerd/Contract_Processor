{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda Function resource stack for Admin User Management",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": "CloudWatch Rule name"
    },
    "CloudWatchEventRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": "CloudWatch Event Rule name"
    },
    "CloudWatchLogsRetentionInDays": {
      "Type": "Number",
      "Default": 14,
      "Description": "CloudWatch Logs retention in days"
    },
    "env": {
      "Type": "String",
      "Description": "Environment name"
    },
    "s3Key": {
      "Type": "String",
      "Description": "S3 key for the Lambda function"
    },
    "userPoolId": {
      "Type": "String",
      "Description": "Cognito User Pool ID"
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              "adminUserManagement",
              {
                "Ref": "env"
              }
            ]
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "USER_POOL_ID": {
              "Ref": "userPoolId"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "S3DeploymentBucket"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "MemorySize": 256
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "CognitoUserPoolAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminCreateUser",
                    "cognito-idp:AdminUpdateUserAttributes",
                    "cognito-idp:AdminDeleteUser",
                    "cognito-idp:AdminEnableUser",
                    "cognito-idp:AdminDisableUser",
                    "cognito-idp:AdminAddUserToGroup",
                    "cognito-idp:AdminRemoveUserFromGroup",
                    "cognito-idp:AdminListGroupsForUser",
                    "cognito-idp:ListUsers",
                    "cognito-idp:ListGroups",
                    "cognito-idp:ListUsersInGroup",
                    "cognito-idp:CreateGroup",
                    "cognito-idp:UpdateGroup",
                    "cognito-idp:DeleteGroup"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "SESEmailAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail",
                    "ses:SendRawEmail",
                    "ses:GetSendQuota",
                    "ses:GetSendStatistics"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaFunctionConfiguration": {
      "DependsOn": [
        "LambdaFunction"
      ],
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 10,
        "Enabled": "True",
        "EventSourceArn": {
          "Fn::Sub": [
            "arn:aws:dynamodb:${region}:${account}:table/${tableName}/stream/*",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "account": {
                "Ref": "AWS::AccountId"
              },
              "tableName": {
                "Ref": "CloudWatchRule"
              }
            }
          ]
        },
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "StartingPosition": "LATEST"
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${region}:${account}:${apiId}/*/*",
            {
              "region": {
                "Ref": "AWS::Region"
              },
              "account": {
                "Ref": "AWS::AccountId"
              },
              "apiId": {
                "Ref": "CloudWatchEventRule"
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Description": "Name of the Lambda function",
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Description": "ARN of the Lambda function",
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Description": "Region of the Lambda function",
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Description": "ARN of the Lambda execution role",
      "Value": {
        "Fn::GetAtt": [
          "LambdaExecutionRole",
          "Arn"
        ]
      }
    }
  }
} 